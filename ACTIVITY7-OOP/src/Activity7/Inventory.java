/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Activity7;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuanb
 */
public class Inventory extends javax.swing.JFrame {

    DefaultTableModel model;

    public Inventory() {
        initComponents();
        model = (DefaultTableModel) InventoryList.getModel();
        model.setRowCount(0);
        print();
    }

    void print() {
        model.setRowCount(0);
        DB_connection.init();
        Connection c = DB_connection.getConnection();

        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM store.storeinventory");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("id"), rs.getString(2), rs.getString(3), rs.getString(4)});

            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void Search(String find, String where) {
        DB_connection.init();
        Connection c = DB_connection.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM store.storeinventory Where " + where + " Like '%" + find + "%'");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("id"), rs.getString(2), rs.getString(3), rs.getString(4)});

            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void intSearch(int find, String where) {
        DB_connection.init();
        Connection c = DB_connection.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM store.storeinventory Where " + where + " LIKE " + find);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("id"), rs.getString(2), rs.getString(3), rs.getString(4)});

            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void del(String where, String condition) {
        model.setRowCount(0);
        DB_connection.init();
        Connection c = DB_connection.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("DELETE FROM store.storeinventory Where " + where + " = '" + condition + "'");
            int rowsDeleted = ps.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Record deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "No record found.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
        }
        print();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buts = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        SelectNew = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InventoryList = new javax.swing.JTable();
        InputField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        findname = new javax.swing.JRadioButton();
        findprice = new javax.swing.JRadioButton();
        findquant = new javax.swing.JRadioButton();
        Code = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        ClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(730, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STORE INVENTORY");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 390, -1));

        SelectNew.setText("Add Product");
        SelectNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectNewActionPerformed(evt);
            }
        });
        getContentPane().add(SelectNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 140, 30));

        jToggleButton2.setText("Update Product");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 190, 140, -1));

        jToggleButton3.setText("Delete");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 140, -1));

        InventoryList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(InventoryList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 480, 390));
        getContentPane().add(InputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 360, 140, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Options:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 220, 60, 20));

        buts.add(findname);
        findname.setText("Name");
        getContentPane().add(findname, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 260, -1, -1));

        buts.add(findprice);
        findprice.setText("Price");
        getContentPane().add(findprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, -1, -1));

        buts.add(findquant);
        findquant.setText("Quantity");
        getContentPane().add(findquant, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, -1, -1));

        buts.add(Code);
        Code.setText("Code");
        getContentPane().add(Code, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 240, -1, -1));

        jLabel3.setText("Specify your options here:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 160, 30));

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 90, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 300, -1));

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 90, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SelectNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectNewActionPerformed
        NewProduct open = new NewProduct();
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SelectNewActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
       update open = new update();
       open.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed

        String where;

        if (InputField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No record has been updated!", "Error! Missing Response!", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (Code.isSelected()) {
            model.setRowCount(0);
            where = "id";
            del(where, InputField.getText());
        } else if (findname.isSelected()) {
            model.setRowCount(0);
            where = "product";
            del(where, InputField.getText());
        } else if (findprice.isSelected()) {
            model.setRowCount(0);
            where = "price";
            del(where, InputField.getText());
        } else if (findquant.isSelected()) {
            model.setRowCount(0);
            where = "quantity";
            del(where, InputField.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Please select what column", "Error! Missing Response!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        buts.clearSelection();
        InputField.setText("");
        print();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
       
        jTextField1.setText("");      // clear input
        InputField.setText("");       // optional: clear delete field
        buts.clearSelection();        // clear radio button selection
        model.setRowCount(0);         // clear table
        print();                      // reload all data
        
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
       
        String input = jTextField1.getText().trim();
        model.setRowCount(0); // clear previous results

        if (input.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a search keyword!");
            return;
        }

        if (Code.isSelected()) {
            intSearch(Integer.parseInt(input), "id");
        } else if (findname.isSelected()) {
            Search(input, "product");
        } else if (findprice.isSelected()) {
            Search(input, "price");
        } else if (findquant.isSelected()) {
            Search(input, "quantity");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a search filter (Code, Name, Price, Quantity).");
        }
        
         
    }//GEN-LAST:event_SearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JRadioButton Code;
    private javax.swing.JTextField InputField;
    private javax.swing.JTable InventoryList;
    private javax.swing.JButton SearchButton;
    private javax.swing.JToggleButton SelectNew;
    private javax.swing.ButtonGroup buts;
    private javax.swing.JRadioButton findname;
    private javax.swing.JRadioButton findprice;
    private javax.swing.JRadioButton findquant;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    // End of variables declaration//GEN-END:variables
}
